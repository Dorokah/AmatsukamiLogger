# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "0.4.15"
        
    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"
    
    - name: Install the project
      run: uv sync --all-extras
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: uv build
      
    - name: Publish to PyPI (via Trusted Publisher)
      run: |
        pip install twine
        python -m twine upload --repository pypi dist/*
      env:
        PYPI_USERNAME: __token__  # This is a placeholder but not used
        PYPI_PASSWORD: ${{ secrets.PYPI_API_KEY }}  # Not needed if using Trusted Publisher, but required for older methods
